#!/usr/bin/env python3

from inverse_kinematics import *
import rospy
import sys, select, os
if os.name == 'nt':
  import msvcrt
else:
  import tty, termios
from std_msgs.msg import Float64MultiArray


def getKey():
    if os.name == 'nt':
      if sys.version_info[0] >= 3:
        return msvcrt.getch().decode()
      else:
        return msvcrt.getch()

    tty.setraw(sys.stdin.fileno())
    rlist, _, _ = select.select([sys.stdin], [], [], 0.1)
    if rlist:
        key = sys.stdin.read(1)
    else:
        key = ''

    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return key

if __name__=="__main__":
    if os.name != 'nt':
        settings = termios.tcgetattr(sys.stdin)

    rospy.init_node('turtlebot3_teleop')
    # pub = rospy.Publisher('cmd_vel', Twist, queue_size=10)
    pub = rospy.Publisher('/delta_robot_position_controller/command', Float64MultiArray, queue_size = 10)


    turtlebot3_model = rospy.get_param("model", "burger")

    step=5
    x=0
    y=0
    z=600
    a = Float64MultiArray()
    while not rospy.is_shutdown():
        key = getKey()
        if key == 'a' :
            x+=step
        elif key == 'q':
            x-=step
        elif key == 'z':
            y+=step
        elif key == 's':
            y-=step
        elif key == 'e':
            z+=step
        elif key == 'd':
            z-=step
        elif key == 'p':
           x=0
           y=0
           z=600
        elif key == 'n':
           break
        theta1, theta2, theta3 = delta_ik(x, y, z)
        a.data=[theta1, theta2, theta3]
        pub.publish(a)
        print(a.data)
    if os.name != 'nt':
        termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
